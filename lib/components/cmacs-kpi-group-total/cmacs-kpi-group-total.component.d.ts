import { OnInit, TemplateRef, EventEmitter, AfterViewInit, ElementRef, OnChanges, Renderer2 } from '@angular/core';
import { WidgetActionType } from '../core/enums/widget-action-type.enum';
import { UtilService } from '../core/services/util.service';
import * as i0 from "@angular/core";
export declare class CmacsKpiGroupTotalComponent implements OnInit, AfterViewInit, OnChanges {
    private renderer;
    private elementRef;
    private utilService;
    columnTemplate: TemplateRef<{}>;
    canvasRef: ElementRef;
    legendContent: ElementRef<any>;
    clickMenu: EventEmitter<any>;
    headerText: string;
    footerText: string;
    footerValue: string;
    view: number[];
    data: any[];
    columnsHeader: string[];
    displayArrowBtns: boolean;
    chartWidth: number;
    fontChartNumber: number;
    col2: number;
    col3: number;
    minWidth: number;
    showChart: boolean;
    scrollY: number;
    p: number;
    scroll: {
        x: string;
        y: string;
    };
    dataTable: any[];
    configurationExpandableRows: any;
    loading: boolean;
    selectedItem: string;
    constructor(renderer: Renderer2, elementRef: ElementRef, utilService: UtilService);
    ngOnInit(): void;
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    resize(): void;
    setScroll(): void;
    scrollRight(): void;
    scrollLeft(): void;
    drawCanvas(): void;
    drawPieSlice(ctx: CanvasRenderingContext2D, centerX: number, centerY: number, radius: number, startAngle: number, endAngle: number, color: any, lineWidth: number): void;
    getTotalCateg(data: any[]): number;
    setConfiguration(): void;
    setData(): void;
    getChildren(items: any[]): any[];
    menuClick(type: WidgetActionType): void;
    expandTable(key: string): void;
    showArrowBtns(): void;
    getDataTable(): any[];
    getConfiguration(): any;
    getChartImage(): any;
    static ɵfac: i0.ɵɵFactoryDef<CmacsKpiGroupTotalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<CmacsKpiGroupTotalComponent, "cmacs-kpi-group-total", never, { "headerText": "headerText"; "footerText": "footerText"; "footerValue": "footerValue"; "view": "view"; "data": "data"; "columnsHeader": "columnsHeader"; }, { "clickMenu": "clickMenu"; }, never, never>;
}
//# sourceMappingURL=cmacs-kpi-group-total.component.d.ts.map