import { Direction, Directionality } from '@angular/cdk/bidi';
import { CdkOverlayOrigin, ConnectionPositionPair } from '@angular/cdk/overlay';
import { Platform } from '@angular/cdk/platform';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { DateHelperService, NzI18nService } from 'ng-zorro-antd/i18n';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class CmacsDateTimePickerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges {
    nzConfigService: NzConfigService;
    protected i18n: NzI18nService;
    private element;
    private renderer;
    private cdr;
    private dateHelper;
    private platform;
    private elementRef;
    private directionality;
    private _onChange?;
    private _onTouched?;
    private destroy$;
    isInit: boolean;
    focused: boolean;
    inputValue: string;
    value: Date | null;
    preValue: Date | null;
    origin: CdkOverlayOrigin;
    inputSize?: number;
    calcWidth: number;
    i18nPlaceHolder$: Observable<string | undefined>;
    overlayPositions: ConnectionPositionPair[];
    dir: Direction;
    inputRef: ElementRef<HTMLInputElement>;
    size: string | null;
    hourStep: number;
    minuteStep: number;
    secondStep: number;
    clearText: string;
    nowText: string;
    okText: string;
    popupClassName: string;
    placeHolder: string;
    addOn?: TemplateRef<void>;
    defaultOpenValue?: Date;
    disabledHours?: () => number[];
    disabledMinutes?: (hour: number) => number[];
    disabledSeconds?: (hour: number, minute: number) => number[];
    format: string;
    cmacsOpen: boolean;
    use12Hours: boolean;
    suffixIcon: string | TemplateRef<NzSafeAny>;
    readonly openChange: EventEmitter<boolean>;
    hideDisabledOptions: boolean;
    hideSeconds: boolean;
    allowEmpty: boolean;
    disabled: boolean;
    autoFocus: boolean;
    emitValue(value: Date | null): void;
    setValue(value: Date | null, syncPreValue?: boolean): void;
    open(): void;
    setPanelWidth(): void;
    close(): void;
    updateAutoFocus(): void;
    onClickClearBtn(event: MouseEvent): void;
    onClickOutside(event: MouseEvent): void;
    onFocus(value: boolean): void;
    focus(): void;
    blur(): void;
    onKeyupEsc(): void;
    onKeyupEnter(): void;
    onInputChange(str: string): void;
    onPanelValueChange(value: Date): void;
    setCurrentValueAndClose(): void;
    constructor(nzConfigService: NzConfigService, i18n: NzI18nService, element: ElementRef, renderer: Renderer2, cdr: ChangeDetectorRef, dateHelper: DateHelperService, platform: Platform, elementRef: ElementRef, directionality: Directionality);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    parseTimeString(str: string): void;
    ngAfterViewInit(): void;
    writeValue(time: Date | null | undefined): void;
    registerOnChange(fn: (time: Date | null) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    static ɵfac: i0.ɵɵFactoryDef<CmacsDateTimePickerComponent, [null, null, null, null, null, null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<CmacsDateTimePickerComponent, "cmacs-datetime-picker", ["cmacsDateTimePicker"], { "size": "size"; "hourStep": "hourStep"; "minuteStep": "minuteStep"; "secondStep": "secondStep"; "clearText": "clearText"; "nowText": "nowText"; "okText": "okText"; "popupClassName": "popupClassName"; "placeHolder": "placeHolder"; "addOn": "addOn"; "defaultOpenValue": "defaultOpenValue"; "disabledHours": "disabledHours"; "disabledMinutes": "disabledMinutes"; "disabledSeconds": "disabledSeconds"; "format": "format"; "cmacsOpen": "cmacsOpen"; "use12Hours": "use12Hours"; "suffixIcon": "suffixIcon"; "hideDisabledOptions": "hideDisabledOptions"; "hideSeconds": "hideSeconds"; "allowEmpty": "allowEmpty"; "disabled": "disabled"; "autoFocus": "autoFocus"; }, { "openChange": "openChange"; }, never, never>;
}
//# sourceMappingURL=cmacs-datetime-picker.component.d.ts.map